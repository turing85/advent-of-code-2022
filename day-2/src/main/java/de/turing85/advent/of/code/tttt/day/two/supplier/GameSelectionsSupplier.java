package de.turing85.advent.of.code.tttt.day.two.supplier;

import de.turing85.advent.of.code.tttt.day.two.model.GameSelection;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.function.Supplier;

/**
 * A supplier, supplying some {@link GameSelection}s.
 */
public abstract class GameSelectionsSupplier implements Supplier<Collection<GameSelection>> {

  /**
   * The {@link GameSelection}s generated by this supplier.
   */
  protected final List<GameSelection> gameSelections;

  /**
   * Constructor.
   *
   * @param gameSelectionsAsString the {@link GameSelection}s, as {@link String}-representation.
   */
  protected GameSelectionsSupplier(String gameSelectionsAsString) {
    this.gameSelections = new ArrayList<>();
    initializeFromString(gameSelectionsAsString);
  }

  /**
   * Callback, called from within the constructor to finalize initialization.
   *
   * @param gameSelectionsAsString the {@link GameSelection}s, as {@link String}-representation.
   */
  protected abstract void initializeFromString(String gameSelectionsAsString);

  @Override
  public Collection<GameSelection> get() {
    return gameSelections();
  }

  /**
   * Gets the {@link GameSelection}s to supply.
   *
   * @return the {@link GameSelection}s to supply.
   */
  public abstract Collection<GameSelection> gameSelections();
}
