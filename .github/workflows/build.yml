name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths-ignore:
      - '**.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '**.md'
      - '**.adoc'
      - '**.txt'
      - '.all-contributorsrc'
  pull_request:
    paths-ignore:
      - '**.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '**.md'
      - '**.adoc'
      - '**.txt'
      - '.all-contributorsrc'

concurrency:
  group: "workflow = ${{ github.workflow }}, ref = ${{ github.event.ref }}, pr = ${{ github.event.pull_request.id }}"
  cancel-in-progress: ${{ github.event_name == 'pull_request' || github.repository != 'turing85/advent-of-code-2022' }}

permissions:
  actions: write
  checks: write
  pull-requests: write

jobs:
  recreate-comment:
    runs-on: ubuntu-latest

    steps:
      - name: Publish Report
        uses: turing85/publish-report@v1.0.1
        with:
          checkout: 'true'
          recreate-comment: true

  generate-matrix:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Generate Matrix
        id: generate-matrix
        run: |
          root=$(pwd)
          pom_file=pom.xml
          exclude_package_type=pom
          
          mapfile -t candidates < <(
          find "${root}" -type f -name "${pom_file}" \
            | sed "s|/${pom_file}$||" \
            | sort \
            | uniq)
          
          results=()
          for candidate in "${candidates[@]}"
          do
            pom_packaging=0
            grep --quiet \
              "<packaging>${exclude_package_type}</packaging>" \
              "${candidate}/${pom_file}" \
                || pom_packaging="${?}"
            if [[ "${pom_packaging}" -ne 0 ]]
            then
              results+=("${candidate}")
            fi
          done
          matrix=$( \
            echo "${results[@]}" \
              | tr " " "\n" \
              | sed "s|$(pwd)/||" \
              | jq \
                --raw-input \
                --null-input \
                --compact-output \
                "[ [inputs][] | { \"module\": . } ] | { \"include\": . }")
          echo "matrix=${matrix}" >> "${GITHUB_OUTPUT}"

  populate-cache:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          cache: 'maven'
          distribution: 'temurin'
          java-version: 17
        id: setup

      - name: Populate Cache
        if: ${{ steps.setup.outputs.cache-hit != 'true' }}
        run: |
          mvn \
            --batch-mode \
            go-offline:resolve-dependencies \
            dependency-check:update-only

      - name: Cancel Build
        if: ${{ failure() }}
        uses: andymckay/cancel-action@0.3

  build:
    runs-on: ubuntu-latest

    needs:
      - populate-cache

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          cache: 'maven'
          distribution: 'temurin'
          java-version: 17

      - name: Build
        run: |
          mvn \
            --batch-mode \
            --define ci-build \
            package

      - name: Upload Maven State
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          if-no-files-found: error
          name: maven-state
          path: '**/target/maven-*'
          retention-days: 2

      - name: Upload Compiled Classes
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          if-no-files-found: error
          name: compiled-classes
          path: '**/target/*classes'
          retention-days: 2

      - name: Upload JARs
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          if-no-files-found: error
          name: jars
          path: '**/target/*.jar'
          retention-days: 2

      - name: Cancel Build
        if: ${{ failure() }}
        uses: andymckay/cancel-action@0.3

  test:
    runs-on: ubuntu-latest

    needs:
      - generate-matrix
      - build

    continue-on-error: true

    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          cache: 'maven'
          distribution: 'temurin'
          java-version: 17

      - name: Download Maven State
        uses: actions/download-artifact@v3
        with:
          name: maven-state

      - name: Download Compiled Classes
        uses: actions/download-artifact@v3
        with:
          name: compiled-classes

      - name: Download JARs
        uses: actions/download-artifact@v3
        with:
          name: jars

      - name: Test ${{ matrix.module }}
        run: |
          mvn \
            --projects ${{ matrix.module }} \
            --batch-mode \
            --define ci-test \
            package

      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          if-no-files-found: error
          name: test-report
          path: '**/target/surefire-reports/TEST*.xml'
          retention-days: 2

      - name: Upload Coverage Report
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: error
          name: coverage-report
          path: '**/target/jacoco/**/*.xml'
          retention-days: 2

  test-report:
    runs-on: ubuntu-latest

    needs:
      - recreate-comment
      - test

    steps:
      - name: Publish Report
        uses: turing85/publish-report@v1.0.1
        with:
          checkout: 'true'
          download-artifact-name: test-report
          report-name: JUnit Test
          report-only-summary: true
          report-path: '**/target/surefire-reports/TEST*.xml'

  sonar:
    runs-on: ubuntu-latest

    needs:
      - test

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          cache: 'maven'
          distribution: 'temurin'
          java-version: 17

      - name: Download Maven State
        uses: actions/download-artifact@v3
        with:
          name: maven-state

      - name: Download Compiled Classes
        uses: actions/download-artifact@v3
        with:
          name: compiled-classes

      - name: Download JARs
        uses: actions/download-artifact@v3
        with:
          name: jars

      - name: Download Coverage Report
        uses: actions/download-artifact@v3
        with:
          name: coverage-report

      - name: Sonar Analysis
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn \
            --batch-mode \
            --define ci-build \
            --define sonar.sourceEncoding=UTF-8 \
            --define sonar.host.url=https://sonarcloud.io \
            --define sonar.organization=turing85-pure \
            --define sonar.projectKey=turing85_advent-of-code-2022 \
            --define sonar.login=${SONAR_TOKEN} \
            package \
            sonar:sonar

      - name: Cancel Build
        if: ${{ failure() }}
        uses: andymckay/cancel-action@0.3

  owasp-scan:
    runs-on: ubuntu-latest

    needs:
      - recreate-comment
      - build

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          cache: 'maven'
          distribution: 'temurin'
          java-version: 17

      - name: Download Maven State
        uses: actions/download-artifact@v3
        with:
          name: maven-state

      - name: Download Compiled Classes
        uses: actions/download-artifact@v3
        with:
          name: compiled-classes

      - name: Download JARs
        uses: actions/download-artifact@v3
        with:
          name: jars

      - name: OWASP CVE Check
        run: | 
          mvn \
            --batch-mode \
            --define ci-owasp \
            package \
            dependency-check:aggregate

      - name: Upload OWASP Report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          if-no-files-found: error
          name: owasp-report
          path: '**/target/owasp/*.xml'
          retention-days: 2

      - name: Publish Report
        if: ${{ always() }}
        uses: turing85/publish-report@1.0.1
        with:
          report-list-tests: failed
          report-name: OWASP
          report-path: '**/target/owasp/*.xml'