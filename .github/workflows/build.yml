name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - 'CODEOWNERS'
      - 'LICENSE'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.all-contributorsrc'

permissions:
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and Test
        run: mvn \
          --batch-mode \
          --define ci \
          package

      - name: Upload Compiled Classes
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: compiled-classes
          path: '**/target/classes'
          retention-days: 2

      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: test-report
          path: '**/target/surefire-reports/*.xml'
          retention-days: 2

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: '**/jacoco-aggregation/target/jacoco/**/*.xml'
          retention-days: 2

  test-report:
    runs-on: ubuntu-latest

    needs:
      - build

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Download Test Report
        uses: actions/download-artifact@v3
        with:
          name: test-report

      - name: JUnit Test Report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: JUnit Test Report
          path: '**/target/surefire-reports/*.xml'
          reporter: java-junit

  sonar:
    runs-on: ubuntu-latest

    needs:
      - build

    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Compiled Classes
        uses: actions/download-artifact@v3
        with:
          name: compiled-classes

      - name: Download Coverage Report
        uses: actions/download-artifact@v3
        with:
          name: code-coverage-report

      - name: Set up JDK 17

        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'
        id: setup

      - name: Sonar Analysis
        env:
          SONAR_HOST: ${{ vars.SONAR_HOST }}
          SONAR_ORG: ${{ vars.SONAR_ORG }}
          SONAR_PROJECT: ${{ vars.SONAR_PROJECT }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn \
            --batch-mode \
            -Dsonar.sourceEncoding=UTF-8 \
            -Dsonar.host.url=${SONAR_HOST} \
            -Dsonar.organization=${SONAR_ORG} \
            -Dsonar.projectKey=${SONAR_PROJECT} \
            -Dsonar.login=${SONAR_TOKEN} \
            sonar:sonar

  owasp:
    runs-on: ubuntu-latest

    steps:
      - name: Git checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
          cache: 'maven'

      - name: OWASP CVE Check
        run: mvn \
          --batch-mode \
          --define formats=junit \
          dependency-check:aggregate

      - name: OWASP Report
        uses: dorny/test-reporter@v1
        if: ${{ always() }}
        with:
          name: OWASP Report
          path: target/owasp/*.xml
          reporter: java-junit

      - name: Upload OWASP Report
        uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: owasp-report
          path: target/owasp/*.xml
          retention-days: 2